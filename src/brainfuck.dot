digraph bf {
    a [label="+"];
    b [label="+"];
    a -> b;

    subgraph loop1 { //except for loop1.start/loop1.end the inner stuff will only connect to stuff inside the subgraph
        loop1.start [shape=box, label="["];
        loop1.end [shape=box, label="]"];
        loop1.start -> loop1.end -> loop1.start [style=dotted];

        e [label=">"];

        b -> loop1.start
        loop1.start -> e;

        subgraph loop2 {
            loop2.start [shape=box, label="["];
            loop2.end [shape=box, label="]"];
            loop2.start -> loop2.end -> loop2.start [style=dotted];

            g [label="+"];
            h [label="."];
            k [label="+"];
            l [label="+"];

            e -> loop2.start;
            loop2.start -> g;
            g -> h;
            h -> k;
            k -> l;
            l -> loop2.end;

        }

        loop2.end -> loop3.start;

        subgraph loop3 {
            loop3.start [shape=box, label="["];
            loop3.end [shape=box, label="]"];
            loop3.start -> loop3.end -> loop3.start [style=dotted];

            m [label="+"];
            loop3.start -> m;
            n [label="."];
            m -> n;

            n -> loop3.end;

            loop3.end -> f;
        }

        f [label="<"];
        f -> loop1.end;
    }

    d [label="-"];
    loop1.end -> d;

//    c1 [shape=box, label="["];
//    c1e [shape=box, label="]"];
//    c1 -> c1e [style=dotted];
//    c1e -> c1 [style=dotted];

//    b -> c1;

//    d [label=">"];
//    c1 -> d;

    //loop [shape=record, label="{ <start> [ | <end> ]}"];  kinda cool but it destroys the pretty layout

//    c2 [shape=box, label="["];
//    c2e [shape=box, label="]"];
//    c2 -> c2e [style=dotted];
//    c2e -> c2 [style=dotted];

    //d -> loop:start
//    d -> c2;

//    e [label="-"];
//    c2e -> e;
    //loop:end -> e;

//    e -> c1e;

//    f [label="-"];
//    c1e -> f;

 //   g [label="."];
 //   h [label="."];
//    g -> h;
//    c2 -> g;
//    h -> c2e;
    //loop:start -> g;
    //h -> loop:end;



}
